#!/usr/local/bin/perl

use 5.010;

use strict;
use warnings FATAL => 'all';
#use diagnostics;

use Data::Dump;
#use Carp qw();

$|=1;
################################################################################
use autodie;

my $DISPLAY_TOP  = 20;
my $MAX_NAME_LEN = 12;
my $SCORES_FILE  = "$ENV{HOME}/.cpan-scores";

my %current_score_of  = get_new();
my %previous_score_of = get_prev();
my %users = map {
    $_ => 1
} keys %current_score_of, keys %previous_score_of;
my %delta_for = map {
    my $c = $current_score_of{$_}  // 0;
    my $p = $previous_score_of{$_} // 0;
    $_ => $c - $p
} keys %users;

for ( sort { ($current_score_of{$b}//0) <=> ($current_score_of{$a}//0) } keys %users ) {
    state $pos;
    printf "%2d) %-*s %7s%+d\n",
      ++$pos, $MAX_NAME_LEN, $_, commify($current_score_of{$_}), $delta_for{$_};
    last if $pos >= $DISPLAY_TOP;
}

write_current(%current_score_of);

exit;

sub write_current {
    my %s = @_;

    open my $OUT, ">", $SCORES_FILE;
    for (sort {lc $a cmp lc $b} keys %s) {
        say $OUT "$_ => $s{$_}";
    }
}

sub get_prev {
    return () unless -e $SCORES_FILE;

    my %p;
    open my $IN, "<", $SCORES_FILE;
    while (<$IN>) {
        my ($n, $s) = split /\s*=>\s*/;
        $p{$n} = $s;
    }
    return %p;
}

sub get_new {
    say "Paste new data now...";
    my @top = split /, /, <>;

    my %score_of;
    for (@top) {
        my ($score, $name) = /\[(\d+)\]\s+(.*)/;
        $name = $1 if $name =~ /\((.*?)\)/;
        $name = truncate_str($MAX_NAME_LEN, $name);
        $score_of{$name} = $score;
    }
    return %score_of;
}

sub truncate_str {
    my ($len, $str) = @_;

    substr $str, $len-3, 9999, "..."
          if length $str > $len;
    s/^\s+//, s/\s+$// for $str;
    return $str;
}

sub commify { # perlfaq4
    local $_  = shift;
    1 while s/^([-+]?\d+)(\d{3})/$1,$2/;
    return $_;
}
__DATA__
[243818] Chris Williams (BINGOS), [60679] Daniel Bosold (DEVOGON), [57402] Andreas J. K.nig (ANDK), [48550] Brian Greenfield (BRIANG), [46191] Steven Schubiger (SCHUBIGER), [39495] Serguei Trouchelle (STRO), [28765] Chad A. Davis (CADAVIS), [23665] Slaven Rezi. (SREZIC), [23034] Nigel Horne, [18032] Steve Wills (SWILLS), [15255] Jost Krieger (JOST), [12223] L&eacute;on Brocard (LBROCARD), [8342] Peter John Acklam (PJACKLAM), [7817] Jeff Lavallee (JLAVALLEE), [7078] David Cantrell (DCANTRELL), [6739] Thomas Fahle (TOMFAHLE), [6321] zeno gantner + gmail com, [5015] tour + jeroen la, [4456] Gabor Szabo (SZABGAB), [3467] Florian Helmberger (FLORIAN), [3190] Leo Susanto, [3138] Renee Baecker (RENEEB), [1799] ahmad zawawi + gmail com, [1728] Sebastian Willing (SEWI), [1682] Jennifer Maldonado, [734] Stefan Koehler (STFN), [651] Reini Urban (RURBAN), [579] David Solimano (DSOLIMANO), [494] Mike Doherty (DOHERTY), [490] Tom Molesworth (TEAM), [451] ..... ..... (Denis Ibaev) (DIONYS), [444] Burak G.rsoy (BURAK), [326] gnusosa + gnusosa net, [325] Przemyslaw Wesolek (PWES), [313] Alexandr Ciornii (CHORNY), [310] Nilson Santos Figueiredo Jr. (NILSONSFJ), [278] Leonaro YongUk KIM (DALINAUM), [270] Curtis Jewell (CSJEWELL), [229] Breno G. de Oliveira (GARU), [223] Randy Stauner (RWSTAUNER), [185] Mark Hindess (BEANZ), [176] Gintautas Grigelionis, [160] Manoj Mishra, [147] Sebastian Woetzel, [146] Robert Lane, [143] Ioan Rogers, [125] Alexei Znamensky (RUSSOZ), [124] Colin Bradford, [118] Pascal Vizeli (PVIZELI), [114] Tobias Leich (FROGGS), [102] Glenn Fowler (CEBJYRE), [97] Gary Greene, [93] Brad Gilbert, [93] Brian Cassidy (BRICAS), [91] Brian Minton, [81] Taro Nishino (TNISHINO), [77] Roland van Ipenburg (IPENBURG), [74] gbhat + pobox com, [58] Yi Ma Mao (IMACAT), [45] Victor A. Rodriguez (BITMAN), [44] Woodley Xu (REDICAPS), [38] Salve J. Nilsen (SJN), [38] Rafael Kitover (RKITOVER), [36] Alex Kalderimis, [33] Matthew M. Lange (MMLANGE), [30] ........ ..... (Krassimir Berov) (BEROV), [30] Michael Roberts, [21] Andrew Pam, [20] Len Budney (BUDNEY), [20] Richard Dooling, [19] Ruslan U. Zakirov (RUZ), [18] Dave Sherohman (DSHEROH), [18] plaven + internode on net, [18] Paul van der Holst, [16] Zeeshan Muhammad, [16] Paul Schinder (SCHINDER), [15] Andrew Moore (AMOORE), [15] sewi + cpan org, [15] Chris Marshall (CHM), [15] Dylan Simon, [15] Vincent Pit (VPIT), [14] ........ ....... (Grishayev Anatoliy) (GRIAN), [13] Barbie (BARBIE), [13] Lukas Mai, [12] Christian Walde, [12] gregor herrmann (GREGOA), [11] Evgeniy Kosov (EKOS), [10] angel + feht dgtu donetsk ua, [8] Alexander Becker (ASB), [6] emazep + cpan org, [6] carey tilden + gmail com, [5] C.H. Kang (AERO), [5] Michael Wardman, [5] andy situ + verizon net, [4] Alex Balhatchet (KAORU), [4] Maurice Mengel, [4] cpantesters + siteaboutnothing com, [4] David Rolsky (DROLSKY), [3] Rick Myers, [3] David Sastre, [2] Yanick Champoux (YANICK), [2] Eric Cholet (CHOLET), [2] Pedro Melo (MELO), [2] Robin Smidsr.d (ROBINS), [2] doherty + cpan org, [2] Thomas Berger (THB), [2] Roy Ivy III (RIVY), [2] Thomas Lenz (THOLEN), [2] MW487, [1] Paul Evans (PEVANS), [1] damienlearnsperl + gmx com, [1] Jase Thew, [1] Michael G Schwern (MSCHWERN), [1] blabos + cpan org, [1] Tatsuhiko Miyagawa (MIYAGAWA)

